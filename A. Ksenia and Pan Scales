#include <iostream>
#include <vector>
#include<algorithm>
#include <string>
#include <map>
#include <stack>
using namespace std;
map<string, int>mp;
vector<pair<string, int>>v;
bool sortbysec(const pair<string, int>& a,const pair<string, int>& b) {
    return a.second > b.second;
}
bool cmp(const pair<string, int>& a, const pair<string, int>& b) {
    if (a.second != b.second)return a.second > b.second;
    return a.first < b.first;
}
int x, y, z, w;
stack<int>q;
vector<int>vec;
int main() {
    string s; cin >> s;
    int fcnt = 0, scnt = -1;
    string fc, sc;
    bool ok = false;
    for (int i = 0; i < s.size(); ++i) {
       
        if ((s[i] != '|') && ok == false) {
            fcnt++;
            fc += s[i];
            //cout << fcnt << endl;
        }
        else {
            if(s[i] != '|')
                sc += s[i];
            scnt++;
            ok = true;
        }
    }
    string res; cin >> res;
    int mn = min(fcnt, scnt);
    int mx = max(fcnt, scnt);
   // cout << mn << mx << endl;
    //cout << fcnt << " " << scnt << endl;
    if ( (mn + mx + res.size() ) & 1 || mn + res.size() < mx) {
        cout << "Impossible";
        return 0;
    }
    else{
        int size = (mn + mx + res.size()) / 2;
      //  cout << mn << " " << mx << " " << res.size() << endl;
        //cout << size << endl;
        for (int i = 0; i < res.size(); ++i) {
            if (fc.size() < size) {
                fc += res[i];
            }
            else {
                sc += res[i];
            }
        }
    }
    cout << fc + "|" + sc;
    return 0;
}
